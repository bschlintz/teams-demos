{"version":3,"sources":["webpack:///webpack/bootstrap?7f80","webpack:///external \"express-msteams-host\"?e438","webpack:///./src/app/server.ts?53c8","webpack:///external \"express\"?22fe","[]","webpack:///external \"path\"?74bb","webpack:///external \"morgan\"?3206","webpack:///external \"debug\"?b2c7","webpack:///external \"compression\"?f791","webpack:///external \"dotenv\"?e70f","webpack:///./src/app/TeamsAppsComponents.ts?b0db","webpack:///./src/app/foodTruckFindrOutgoingWebhook/FoodTruckFindrOutgoingWebhook.ts?0849","webpack:///external \"botbuilder\"?fa14","webpack:///external \"crypto\"?4c76","webpack:///external \"lodash\"?97de","webpack:///./src/app/foodTruckFindrOutgoingWebhook/foodtrucks.ts?62f7"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","require","log","debug","config","express","Express","port","process","env","PORT","use","json","verify","req","res","buf","encoding","rawBody","toString","urlencoded","extended","set","path","join","__dirname","morgan","compression","static","MsTeamsApiRouter","allComponents","MsTeamsPageRouter","root","components","index","http","createServer","listen","nonce","FoodTruckFindrOutgoingWebhook","next","incoming","body","message","type","builder","ActivityTypes","Message","securityToken","SECURITY_TOKEN","length","auth","headers","authorization","msgBuf","Buffer","from","crypto","createHmac","update","digest","scrubbedText","scrubMessage","text","processAuthenticatedRequest","send","JSON","stringify","incomingText","selectedFoodTruck","find","ft","trim","toLowerCase","indexOf","city","attachmentLayout","attachments","this","getFoodTruckDetailCard","slice","lastIndexOf","replace","foodtruck","adaptiveCardSource","actions","url","items","cardBody","cardDetails","columns","facts","likes","sweet","savory","vegetarian","CardFactory","adaptiveCard","OutgoingWebhookDeclaration"],"mappings":"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","file":"server.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 1);\n","module.exports = require(\"express-msteams-host\");","import * as Express from \"express\";\nimport * as http from \"http\";\nimport * as path from \"path\";\nimport * as morgan from \"morgan\";\nimport { MsTeamsApiRouter, MsTeamsPageRouter } from \"express-msteams-host\";\nimport * as debug from \"debug\";\nimport * as compression from \"compression\";\n\n\n\n// Initialize debug logging module\nconst log = debug(\"msteams\");\n\nlog(`Initializing Microsoft Teams Express hosted App...`);\n\n// Initialize dotenv, to use .env file settings if existing\n// tslint:disable-next-line:no-var-requires\nrequire(\"dotenv\").config();\n\n\n\n// The import of components has to be done AFTER the dotenv config\nimport * as allComponents from \"./TeamsAppsComponents\";\n\n// Create the Express webserver\nconst express = Express();\nconst port = process.env.port || process.env.PORT || 3007;\n\n// Inject the raw request body onto the request object\nexpress.use(Express.json({\n    verify: (req, res, buf: Buffer, encoding: string): void => {\n        (req as any).rawBody = buf.toString();\n    }\n}));\nexpress.use(Express.urlencoded({ extended: true }));\n\n// Express configuration\nexpress.set(\"views\", path.join(__dirname, \"/\"));\n\n// Add simple logging\nexpress.use(morgan(\"tiny\"));\n\n// Add compression - uncomment to remove compression\nexpress.use(compression());\n\n// Add /scripts and /assets as static folders\nexpress.use(\"/scripts\", Express.static(path.join(__dirname, \"web/scripts\")));\nexpress.use(\"/assets\", Express.static(path.join(__dirname, \"web/assets\")));\n\n// routing for bots, connectors and incoming web hooks - based on the decorators\n// For more information see: https://www.npmjs.com/package/express-msteams-host\nexpress.use(MsTeamsApiRouter(allComponents));\n\n// routing for pages for tabs and connector configuration\n// For more information see: https://www.npmjs.com/package/express-msteams-host\nexpress.use(MsTeamsPageRouter({\n    root: path.join(__dirname, \"web/\"),\n    components: allComponents\n}));\n\n// Set default web page\nexpress.use(\"/\", Express.static(path.join(__dirname, \"web/\"), {\n    index: \"index.html\"\n}));\n\n// Set the port\nexpress.set(\"port\", port);\n\n// Start the webserver\nhttp.createServer(express).listen(port, () => {\n    log(`Server running on ${port}`);\n});\n","module.exports = require(\"express\");","module.exports = require(\"http\");","module.exports = require(\"path\");","module.exports = require(\"morgan\");","module.exports = require(\"debug\");","module.exports = require(\"compression\");","module.exports = require(\"dotenv\");","// Components will be added here\nexport const nonce = {}; // Do not remove!\n// Automatically added for the foodTruckFindrOutgoingWebhook outgoing webhook\nexport * from \"./foodTruckFindrOutgoingWebhook/FoodTruckFindrOutgoingWebhook\";\n","import * as builder from \"botbuilder\";\nimport * as express from \"express\";\nimport * as crypto from \"crypto\";\nimport { OutgoingWebhookDeclaration, IOutgoingWebhook } from \"express-msteams-host\";\nimport { find } from \"lodash\";\nimport foodtrucks from \"./foodtrucks\";\n/**\n * Implementation for Food Truck Findr Outgoing Webhook\n */\n@OutgoingWebhookDeclaration(\"/api/webhook\")\nexport class FoodTruckFindrOutgoingWebhook implements IOutgoingWebhook {\n\n    /**\n     * The constructor\n     */\n    public constructor() {\n    }\n\n    /**\n     * Implement your outgoing webhook logic here\n     * @param req the Request\n     * @param res the Response\n     * @param next\n     */\n    public requestHandler(req: express.Request, res: express.Response, next: express.NextFunction) {\n        // parse the incoming message\n        const incoming = req.body as builder.Activity;\n\n        // create the response, any Teams compatible responses can be used\n        let message: Partial<builder.Activity> = {\n            type: builder.ActivityTypes.Message\n        };\n\n        const securityToken = process.env.SECURITY_TOKEN;\n        if (securityToken && securityToken.length > 0) {\n            // There is a configured security token\n            const auth = req.headers.authorization;\n            const msgBuf = Buffer.from((req as any).rawBody, \"utf8\");\n            const msgHash = \"HMAC \" + crypto.\n                createHmac(\"sha256\", new Buffer(securityToken as string, \"base64\")).\n                update(msgBuf).\n                digest(\"base64\");\n\n            if (msgHash === auth) {\n                // Message was ok and verified\n                const scrubbedText = FoodTruckFindrOutgoingWebhook.scrubMessage(incoming.text)\n                message = FoodTruckFindrOutgoingWebhook.processAuthenticatedRequest(scrubbedText);\n            } else {\n                // Message could not be verified\n                message.text = `Error: message sender cannot be verified`;\n            }\n        } else {\n            // There is no configured security token\n            message.text = `Error: outgoing webhook is not configured with a security token`;\n        }\n\n        // send the message\n        res.send(JSON.stringify(message));\n    }\n\n    private static processAuthenticatedRequest(incomingText: string): Partial<builder.Activity> {\n        const message: Partial<builder.Activity> = {\n            type: builder.ActivityTypes.Message\n        };\n\n        // get the selected planet\n        const selectedFoodTruck = foodtrucks.find((ft) => ft.name.trim().toLowerCase().indexOf(incomingText.trim().toLowerCase()) > -1 || ft.city.trim().toLowerCase().indexOf(incomingText.trim().toLowerCase()) > -1);\n\n        if (!selectedFoodTruck) {\n            message.text = `Echo ${incomingText}`;\n        } else {\n            message.type = \"result\";\n            message.attachmentLayout = \"list\";\n            message.attachments = [this.getFoodTruckDetailCard(selectedFoodTruck)];\n        }\n\n        return message;\n    }\n\n    private static scrubMessage(incomingText: string): string {\n        let cleanMessage = incomingText\n            .slice(incomingText.lastIndexOf(\">\") + 1, incomingText.length)\n            .replace(\"&nbsp;\", \"\");\n        return cleanMessage;\n    }\n\n    //\n    // Utility to convert a food truck object to a hydrated Adaptive Card\n    //\n    public static getFoodTruckDetailCard(foodtruck: any): builder.Attachment {\n        // load display card\n        const adaptiveCardSource: any = require(\"./foodTruckDisplayCard.json\");\n\n        // update food truck fields in display card\n        adaptiveCardSource.actions[0].url = `https://www.yelp.com/search?find_desc=${foodtruck.name}&find_loc=${foodtruck.city}`;\n        find(adaptiveCardSource.body, { \"id\": \"cardHeader\" }).items[0].text = `${foodtruck.name} - ${foodtruck.city}`;\n\n        const cardBody: any = find(adaptiveCardSource.body, { \"id\": \"cardBody\" });\n        const cardDetails: any = find(cardBody.items, { \"id\": \"foodTruckDetails\" });\n        find(cardDetails.columns[0].items[0].facts, { \"id\": \"likes\" }).value = foodtruck.likes;\n        find(cardDetails.columns[0].items[0].facts, { \"id\": \"sweet\" }).value = foodtruck.sweet ? 'Yes' : 'No';\n        find(cardDetails.columns[0].items[0].facts, { \"id\": \"savory\" }).value = foodtruck.savory ? 'Yes' : 'No';\n        find(cardDetails.columns[0].items[0].facts, { \"id\": \"vegetarian\" }).value = foodtruck.vegetarian ? 'Yes' : 'No';\n\n        // return the adaptive card\n        return builder.CardFactory.adaptiveCard(adaptiveCardSource);\n    }\n}\n","module.exports = require(\"botbuilder\");","module.exports = require(\"crypto\");","module.exports = require(\"lodash\");","export default [\r\n  {\r\n    \"id\": 1,\r\n    \"name\": \"Pizza Buildana\",\r\n    \"likes\": 10,\r\n    \"savory\": true,\r\n    \"sweet\": false,\r\n    \"vegetarian\": true,\r\n    \"bookable\": true,\r\n    \"city\": \"Austin, TX\"\r\n  },\r\n  {\r\n    \"id\": 2,\r\n    \"name\": \"Grab and Dip\",\r\n    \"likes\": 5,\r\n    \"savory\": false,\r\n    \"sweet\": true,\r\n    \"vegetarian\": true,\r\n    \"bookable\": false,\r\n    \"city\": \"Denver, CO\"\r\n  },\r\n  {\r\n    \"id\": 3,\r\n    \"name\": \"Thai Cart\",\r\n    \"likes\": 17,\r\n    \"savory\": true,\r\n    \"sweet\": true,\r\n    \"vegetarian\": true,\r\n    \"bookable\": false,\r\n    \"city\": \"Austin, TX\"\r\n  },\r\n  {\r\n    \"id\": 4,\r\n    \"name\": \"Curry And Go\",\r\n    \"likes\": 54,\r\n    \"savory\": true,\r\n    \"sweet\": false,\r\n    \"vegetarian\": true,\r\n    \"bookable\": true,\r\n    \"city\": \"Portland, OR\"\r\n  },\r\n  {\r\n    \"id\": 5,\r\n    \"name\": \"The big fat pork\",\r\n    \"likes\": 9,\r\n    \"savory\": true,\r\n    \"sweet\": false,\r\n    \"vegetarian\": true,\r\n    \"bookable\": false,\r\n    \"city\": \"Seattle, WA\"\r\n  },\r\n  {\r\n    \"id\": 6,\r\n    \"name\": \"The French corner\",\r\n    \"likes\": 2,\r\n    \"savory\": true,\r\n    \"sweet\": true,\r\n    \"vegetarian\": true,\r\n    \"bookable\": true,\r\n    \"city\": \"Seattle, WA\"\r\n  },\r\n  {\r\n    \"id\": 7,\r\n    \"name\": \"Mexican Fiesta\",\r\n    \"likes\": 44,\r\n    \"savory\": true,\r\n    \"sweet\": false,\r\n    \"vegetarian\": false,\r\n    \"bookable\": false,\r\n    \"city\": \"Seattle\"\r\n  }\r\n]"],"sourceRoot":""}