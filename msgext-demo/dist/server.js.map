{"version":3,"sources":["webpack:///webpack/bootstrap?7f80","webpack:///external \"botbuilder\"?fa14","webpack:///./src/app/foodTruckBot/foodTruckBot.ts?0f55","webpack:///./src/app/server.ts?53c8","webpack:///external \"express\"?22fe","[]","webpack:///external \"path\"?74bb","webpack:///external \"morgan\"?3206","webpack:///external \"express-msteams-host\"?e438","webpack:///external \"debug\"?b2c7","webpack:///external \"compression\"?f791","webpack:///./src/app/foodTruckBot/foodtrucks.ts?59db","webpack:///external \"lodash\"?97de","webpack:///external \"dotenv\"?e70f","webpack:///./src/app/TeamsAppsComponents.ts?b0db"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","require","FoodTruckBot","TeamsActivityHandler","super","context","action","adaptiveCardSource","find","body","choices","map","ft","id","city","response","task","type","card","CardFactory","adaptiveCard","title","height","width","Promise","resolve","commandId","console","log","selectedFoodTruck","data","foodTruckSelector","this","getFoodTruckDetailCard","composeExtension","attachmentLayout","attachments","Error","foodtruck","actions","url","items","text","cardBody","cardDetails","columns","facts","likes","sweet","savory","vegetarian","query","searchQuery","parameters","trim","toLowerCase","queryResults","filter","indexOf","searchResultsCards","forEach","push","getFoodTruckResultCard","heroCard","debug","config","express","Express","port","process","env","PORT","use","json","verify","req","res","buf","encoding","rawBody","toString","urlencoded","extended","set","path","join","__dirname","morgan","compression","static","MsTeamsApiRouter","allComponents","MsTeamsPageRouter","root","components","index","http","createServer","listen","botAdapter","BotFrameworkAdapter","appId","MICROSOFT_APP_ID","appPassword","MICROSOFT_APP_PASSWORD","onTurnError","error","sendTraceActivity","sendActivity","bot","post","request","processActivity","run","nonce"],"mappings":"aACE,IAAIA,EAAmB,GAGvB,SAASC,EAAoBC,GAG5B,GAAGF,EAAiBE,GACnB,OAAOF,EAAiBE,GAAUC,QAGnC,IAAIC,EAASJ,EAAiBE,GAAY,CACzCG,EAAGH,EACHI,GAAG,EACHH,QAAS,IAUV,OANAI,EAAQL,GAAUM,KAAKJ,EAAOD,QAASC,EAAQA,EAAOD,QAASF,GAG/DG,EAAOE,GAAI,EAGJF,EAAOD,QAKfF,EAAoBQ,EAAIF,EAGxBN,EAAoBS,EAAIV,EAGxBC,EAAoBU,EAAI,SAASR,EAASS,EAAMC,GAC3CZ,EAAoBa,EAAEX,EAASS,IAClCG,OAAOC,eAAeb,EAASS,EAAM,CAAEK,YAAY,EAAMC,IAAKL,KAKhEZ,EAAoBkB,EAAI,SAAShB,GACX,oBAAXiB,QAA0BA,OAAOC,aAC1CN,OAAOC,eAAeb,EAASiB,OAAOC,YAAa,CAAEC,MAAO,WAE7DP,OAAOC,eAAeb,EAAS,aAAc,CAAEmB,OAAO,KAQvDrB,EAAoBsB,EAAI,SAASD,EAAOE,GAEvC,GADU,EAAPA,IAAUF,EAAQrB,EAAoBqB,IAC/B,EAAPE,EAAU,OAAOF,EACpB,GAAW,EAAPE,GAA8B,iBAAVF,GAAsBA,GAASA,EAAMG,WAAY,OAAOH,EAChF,IAAII,EAAKX,OAAOY,OAAO,MAGvB,GAFA1B,EAAoBkB,EAAEO,GACtBX,OAAOC,eAAeU,EAAI,UAAW,CAAET,YAAY,EAAMK,MAAOA,IACtD,EAAPE,GAA4B,iBAATF,EAAmB,IAAI,IAAIM,KAAON,EAAOrB,EAAoBU,EAAEe,EAAIE,EAAK,SAASA,GAAO,OAAON,EAAMM,IAAQC,KAAK,KAAMD,IAC9I,OAAOF,GAIRzB,EAAoB6B,EAAI,SAAS1B,GAChC,IAAIS,EAAST,GAAUA,EAAOqB,WAC7B,WAAwB,OAAOrB,EAAgB,SAC/C,WAA8B,OAAOA,GAEtC,OADAH,EAAoBU,EAAEE,EAAQ,IAAKA,GAC5BA,GAIRZ,EAAoBa,EAAI,SAASiB,EAAQC,GAAY,OAAOjB,OAAOkB,UAAUC,eAAe1B,KAAKuB,EAAQC,IAGzG/B,EAAoBkC,EAAI,GAIjBlC,EAAoBA,EAAoBmC,EAAI,G,gBClFrDhC,EAAOD,QAAUkC,QAAQ,e,8ECAzB,aAQA,QACA,QAEA,MAAaC,UAAqB,EAAAC,qBAChC,cACEC,QAMQ,uCAAuCC,EAAsBC,GAErE,MAAMC,EAA0B,EAAQ,IAEV,EAAAC,KAAKD,EAAmBE,KAAM,CAAE,GAAM,sBAEjDC,QAAU,UAAWC,IAAKC,IACpC,CAAE,MAASA,EAAGC,GAAI,MAAS,GAAGD,EAAGpC,UAAUoC,EAAGE,UAKvD,IAAIC,EAA+E,CACjFC,KAAM,CACJC,KAAM,WACN/B,MAAO,CACLgC,KANe,EAAAC,YAAYC,aAAab,GAOxCc,MAAO,sBACPC,OAAQ,IACRC,MAAO,OAKb,OAAOC,QAAQC,QAAQV,GAMf,0CAA0CV,EAAsBC,GACxE,OAAQA,EAAOoB,WACb,IAAK,0BAEHC,QAAQC,IAAI,SAAUtB,GACtB,MAAMuB,EAAyB,UAAWrB,KAAMI,GAAO,GAAGA,EAAGC,OAASP,EAAOwB,KAAKC,mBAC5EX,EAAeY,KAAKC,uBAAuBJ,GAGjD,OAAOL,QAAQC,QAA0C,CACvDS,iBAAkB,CAChBjB,KAAM,SACNkB,iBAAkB,OAClBC,YAAa,CAAChB,MAIpB,QACE,MAAM,IAAIiB,MAAM,mBAOd,uBAAuBC,GAE7B,MAAM/B,EAA0B,EAAQ,IAGxCA,EAAmBgC,QAAQ,GAAGC,IAAM,yCAAyCF,EAAU9D,iBAAiB8D,EAAUxB,OAClH,EAAAN,KAAKD,EAAmBE,KAAM,CAAE,GAAM,eAAgBgC,MAAM,GAAGC,KAAO,GAAGJ,EAAU9D,UAAU8D,EAAUxB,OAEvG,MAAM6B,EAAgB,EAAAnC,KAAKD,EAAmBE,KAAM,CAAE,GAAM,aACtDmC,EAAmB,EAAApC,KAAKmC,EAASF,MAAO,CAAE,GAAM,qBAOtD,OANA,EAAAjC,KAAKoC,EAAYC,QAAQ,GAAGJ,MAAM,GAAGK,MAAO,CAAE,GAAM,UAAW5D,MAAQoD,EAAUS,MACjF,EAAAvC,KAAKoC,EAAYC,QAAQ,GAAGJ,MAAM,GAAGK,MAAO,CAAE,GAAM,UAAW5D,MAAQoD,EAAUU,MAAQ,MAAQ,KACjG,EAAAxC,KAAKoC,EAAYC,QAAQ,GAAGJ,MAAM,GAAGK,MAAO,CAAE,GAAM,WAAY5D,MAAQoD,EAAUW,OAAS,MAAQ,KACnG,EAAAzC,KAAKoC,EAAYC,QAAQ,GAAGJ,MAAM,GAAGK,MAAO,CAAE,GAAM,eAAgB5D,MAAQoD,EAAUY,WAAa,MAAQ,KAGpG,EAAA/B,YAAYC,aAAab,GAMxB,mCAAmCF,EAAsB8C,GAEjE,IAAIC,EAAc,GACdD,GAASA,EAAME,YAA2C,kBAA7BF,EAAME,WAAW,GAAG7E,MAA4B2E,EAAME,WAAW,GAAGnE,QACnGkE,EAAcD,EAAME,WAAW,GAAGnE,MAAMoE,OAAOC,eAIjD,IAAIC,EAAe,UAAWC,OAAQ7C,GAAOA,EAAGpC,KAAK+E,cAAcG,QAAQN,IAAgB,GAAKxC,EAAGE,KAAKyC,cAAcG,QAAQN,IAAgB,GAG1IO,EAAqD,GACzDH,EAAaI,QAAShD,IACpB+C,EAAmBE,KAAK7B,KAAK8B,uBAAuBlD,MAGtD,IAAIG,EAAmE,CACrEmB,iBAAkB,CAChBjB,KAAM,SACNkB,iBAAkB,OAClBC,YAAauB,IAIjB,OAAOnC,QAAQC,QAAQV,GAMjB,uBAAuBuB,GAC7B,OAAO,EAAAnB,YAAY4C,SAAS,GAAGzB,EAAU9D,UAAU8D,EAAUxB,SApHjE,kB,iZCXA,aACA,OACA,OACA,OACA,OACA,OACA,QACA,OACA,OAGMc,EAAMoC,EAAM,WAElBpC,EAAI,sDAIJ,EAAQ,IAAUqC,SAKlB,cAGMC,EAAUC,IACVC,EAAOC,QAAQC,IAAIF,MAAQC,QAAQC,IAAIC,MAAQ,KAGrDL,EAAQM,IAAIL,EAAQM,KAAK,CACrBC,OAAQ,CAACC,EAAKC,EAAKC,EAAaC,KAC3BH,EAAYI,QAAUF,EAAIG,eAGnCd,EAAQM,IAAIL,EAAQc,WAAW,CAAEC,UAAU,KAG3ChB,EAAQiB,IAAI,QAASC,EAAKC,KAAKC,UAAW,MAG1CpB,EAAQM,IAAIe,EAAO,SAGnBrB,EAAQM,IAAIgB,KAGZtB,EAAQM,IAAI,WAAYL,EAAQsB,OAAOL,EAAKC,KAAKC,UAAW,iBAC5DpB,EAAQM,IAAI,UAAWL,EAAQsB,OAAOL,EAAKC,KAAKC,UAAW,gBAI3DpB,EAAQM,IAAI,EAAAkB,iBAAiBC,IAI7BzB,EAAQM,IAAI,EAAAoB,kBAAkB,CAC1BC,KAAMT,EAAKC,KAAKC,UAAW,QAC3BQ,WAAYH,KAIhBzB,EAAQM,IAAI,IAAKL,EAAQsB,OAAOL,EAAKC,KAAKC,UAAW,QAAS,CAC1DS,MAAO,gBAIX7B,EAAQiB,IAAI,OAAQf,GAGpB4B,EAAKC,aAAa/B,GAASgC,OAAO9B,EAAM,KACpCxC,EAAI,qBAAqBwC,OAK7B,MAAM+B,EAAa,IAAI,EAAAC,oBAAoB,CACvCC,MAAOhC,QAAQC,IAAIgC,iBACnBC,YAAalC,QAAQC,IAAIkC,yBAI7BL,EAAWM,YAAc,CAAOpG,EAASqG,IAAU,EAAD,gCAC9C/E,QAAQ+E,MAAM,yCAAyCA,WACjDrG,EAAQsG,kBAAkB,oBAAqB,GAAGD,IAAS,6CAA8C,mBACzGrG,EAAQuG,aAAa,gBAI/B,MAAMC,EAAM,IAAI,EAAA3G,aAChBgE,EAAQ4C,KAAK,gBAAiB,CAACC,EAAShG,KACpCoF,EAAWa,gBAAgBD,EAAShG,EAAiBV,GAAY,EAAD,sCACtDwG,EAAII,IAAI5G,U,cC3FtBrC,EAAOD,QAAUkC,QAAQ,Y,cCAzBjC,EAAOD,QAAUkC,QAAQ,S,cCAzBjC,EAAOD,QAAUkC,QAAQ,S,cCAzBjC,EAAOD,QAAUkC,QAAQ,W,cCAzBjC,EAAOD,QAAUkC,QAAQ,yB,cCAzBjC,EAAOD,QAAUkC,QAAQ,U,cCAzBjC,EAAOD,QAAUkC,QAAQ,gB,8ECAzB,UAAe,CACb,CACE,GAAM,EACN,KAAQ,iBACR,MAAS,GACT,QAAU,EACV,OAAS,EACT,YAAc,EACd,UAAY,EACZ,KAAQ,cAEV,CACE,GAAM,EACN,KAAQ,eACR,MAAS,EACT,QAAU,EACV,OAAS,EACT,YAAc,EACd,UAAY,EACZ,KAAQ,cAEV,CACE,GAAM,EACN,KAAQ,YACR,MAAS,GACT,QAAU,EACV,OAAS,EACT,YAAc,EACd,UAAY,EACZ,KAAQ,cAEV,CACE,GAAM,EACN,KAAQ,eACR,MAAS,GACT,QAAU,EACV,OAAS,EACT,YAAc,EACd,UAAY,EACZ,KAAQ,gBAEV,CACE,GAAM,EACN,KAAQ,mBACR,MAAS,EACT,QAAU,EACV,OAAS,EACT,YAAc,EACd,UAAY,EACZ,KAAQ,eAEV,CACE,GAAM,EACN,KAAQ,oBACR,MAAS,EACT,QAAU,EACV,OAAS,EACT,YAAc,EACd,UAAY,EACZ,KAAQ,eAEV,CACE,GAAM,EACN,KAAQ,iBACR,MAAS,GACT,QAAU,EACV,OAAS,EACT,YAAc,EACd,UAAY,EACZ,KAAQ,a,cCrEZjC,EAAOD,QAAUkC,QAAQ,W,ugCCAzBjC,EAAOD,QAAUkC,QAAQ,W,8ECEZ,EAAAiH,MAAQ,G,4DAErB","file":"server.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 2);\n","module.exports = require(\"botbuilder\");","import {\r\n  TeamsActivityHandler,\r\n  TurnContext,\r\n  CardFactory, MessagingExtensionAction, MessagingExtensionActionResponse, MessagingExtensionAttachment,\r\n  MessagingExtensionQuery, MessagingExtensionResponse,\r\n  AppBasedLinkQuery\r\n} from \"botbuilder\";\r\n\r\nimport foodtrucks from './foodtrucks';\r\nimport { find } from \"lodash\";\r\n\r\nexport class FoodTruckBot extends TeamsActivityHandler {\r\n  constructor() {\r\n    super();\r\n  }\r\n\r\n  //\r\n  // Food Truck Selector\r\n  //\r\n  protected handleTeamsMessagingExtensionFetchTask(context: TurnContext, action: MessagingExtensionAction): Promise<MessagingExtensionActionResponse> {\r\n    // load card template\r\n    const adaptiveCardSource: any = require(\"./foodTruckSelectorCard.json\");\r\n    // locate the food truck selector\r\n    let foodTruckChoiceSet: any = find(adaptiveCardSource.body, { \"id\": \"foodTruckSelector\" });\r\n    // update choice set with food trucks\r\n    foodTruckChoiceSet.choices = foodtrucks.map((ft) => {\r\n      return { \"value\": ft.id, \"title\": `${ft.name} - ${ft.city}` }\r\n    });\r\n    // load the adaptive card\r\n    const adaptiveCard = CardFactory.adaptiveCard(adaptiveCardSource);\r\n  \r\n    let response: MessagingExtensionActionResponse = <MessagingExtensionActionResponse>{\r\n      task: {\r\n        type: \"continue\",\r\n        value: {\r\n          card: adaptiveCard,\r\n          title: 'Food Truck Selector',\r\n          height: 150,\r\n          width: 500\r\n        }\r\n      }\r\n    };\r\n  \r\n    return Promise.resolve(response);\r\n  }\r\n\r\n  //\r\n  // Insert Selected Food Truck Adaptive Card\r\n  //\r\n  protected handleTeamsMessagingExtensionSubmitAction(context: TurnContext, action: MessagingExtensionAction): Promise<MessagingExtensionActionResponse> {\r\n    switch (action.commandId) {\r\n      case 'foodTruckExpanderAction':\r\n        // get the selected planet\r\n        console.log('action', action)\r\n        const selectedFoodTruck: any = foodtrucks.find((ft) => `${ft.id}` === action.data.foodTruckSelector);\r\n        const adaptiveCard = this.getFoodTruckDetailCard(selectedFoodTruck);\r\n  \r\n        // generate the response\r\n        return Promise.resolve(<MessagingExtensionActionResponse>{\r\n          composeExtension: {\r\n            type: \"result\",\r\n            attachmentLayout: \"list\",\r\n            attachments: [adaptiveCard]\r\n          }\r\n        });\r\n        break;\r\n      default:\r\n        throw new Error('NotImplemented');\r\n    }\r\n  }\r\n\r\n  //\r\n  // Utility to convert a food truck object to a hydrated Adaptive Card\r\n  //\r\n  private getFoodTruckDetailCard(foodtruck: any): MessagingExtensionAttachment {\r\n    // load display card\r\n    const adaptiveCardSource: any = require(\"./foodTruckDisplayCard.json\");\r\n  \r\n    // update food truck fields in display card\r\n    adaptiveCardSource.actions[0].url = `https://www.yelp.com/search?find_desc=${foodtruck.name}&find_loc=${foodtruck.city}`;\r\n    find(adaptiveCardSource.body, { \"id\": \"cardHeader\" }).items[0].text = `${foodtruck.name} - ${foodtruck.city}`;\r\n    \r\n    const cardBody: any = find(adaptiveCardSource.body, { \"id\": \"cardBody\" });\r\n    const cardDetails: any = find(cardBody.items, { \"id\": \"foodTruckDetails\" });\r\n    find(cardDetails.columns[0].items[0].facts, { \"id\": \"likes\" }).value = foodtruck.likes;\r\n    find(cardDetails.columns[0].items[0].facts, { \"id\": \"sweet\" }).value = foodtruck.sweet ? 'Yes' : 'No';\r\n    find(cardDetails.columns[0].items[0].facts, { \"id\": \"savory\" }).value = foodtruck.savory ? 'Yes' : 'No';\r\n    find(cardDetails.columns[0].items[0].facts, { \"id\": \"vegetarian\" }).value = foodtruck.vegetarian ? 'Yes' : 'No';\r\n  \r\n    // return the adaptive card\r\n    return CardFactory.adaptiveCard(adaptiveCardSource);\r\n  }\r\n\r\n  //\r\n  // Search for Food Trucks\r\n  //\r\n  protected handleTeamsMessagingExtensionQuery(context: TurnContext, query: MessagingExtensionQuery): Promise<MessagingExtensionResponse> {\r\n    // get the search query\r\n    let searchQuery = \"\";\r\n    if (query && query.parameters && query.parameters[0].name === \"searchKeyword\" && query.parameters[0].value) {\r\n      searchQuery = query.parameters[0].value.trim().toLowerCase();\r\n    }\r\n  \r\n    // search results\r\n    let queryResults = foodtrucks.filter((ft) => ft.name.toLowerCase().indexOf(searchQuery) > -1 || ft.city.toLowerCase().indexOf(searchQuery) > -1);\r\n  \r\n    // get the results as cards\r\n    let searchResultsCards: MessagingExtensionAttachment[] = [];\r\n    queryResults.forEach((ft) => {\r\n      searchResultsCards.push(this.getFoodTruckResultCard(ft));\r\n    });\r\n  \r\n    let response: MessagingExtensionResponse = <MessagingExtensionResponse>{\r\n      composeExtension: {\r\n        type: \"result\",\r\n        attachmentLayout: \"list\",\r\n        attachments: searchResultsCards\r\n      }\r\n    };\r\n  \r\n    return Promise.resolve(response);\r\n  }\r\n\r\n  //\r\n  // Utility to convert food truck search result to simple hero card\r\n  //\r\n  private getFoodTruckResultCard(foodtruck: any): MessagingExtensionAttachment {\r\n    return CardFactory.heroCard(`${foodtruck.name} - ${foodtruck.city}`);\r\n  }\r\n\r\n}","import * as Express from \"express\";\nimport * as http from \"http\";\nimport * as path from \"path\";\nimport * as morgan from \"morgan\";\nimport { MsTeamsApiRouter, MsTeamsPageRouter } from \"express-msteams-host\";\nimport * as debug from \"debug\";\nimport * as compression from \"compression\";\nimport { BotFrameworkAdapter } from \"botbuilder\";\nimport { FoodTruckBot } from \"./foodTruckBot/foodTruckBot\";\n\n// Initialize debug logging module\nconst log = debug(\"msteams\");\n\nlog(`Initializing Microsoft Teams Express hosted App...`);\n\n// Initialize dotenv, to use .env file settings if existing\n// tslint:disable-next-line:no-var-requires\nrequire(\"dotenv\").config();\n\n\n\n// The import of components has to be done AFTER the dotenv config\nimport * as allComponents from \"./TeamsAppsComponents\";\n\n// Create the Express webserver\nconst express = Express();\nconst port = process.env.port || process.env.PORT || 3007;\n\n// Inject the raw request body onto the request object\nexpress.use(Express.json({\n    verify: (req, res, buf: Buffer, encoding: string): void => {\n        (req as any).rawBody = buf.toString();\n    }\n}));\nexpress.use(Express.urlencoded({ extended: true }));\n\n// Express configuration\nexpress.set(\"views\", path.join(__dirname, \"/\"));\n\n// Add simple logging\nexpress.use(morgan(\"tiny\"));\n\n// Add compression - uncomment to remove compression\nexpress.use(compression());\n\n// Add /scripts and /assets as static folders\nexpress.use(\"/scripts\", Express.static(path.join(__dirname, \"web/scripts\")));\nexpress.use(\"/assets\", Express.static(path.join(__dirname, \"web/assets\")));\n\n// routing for bots, connectors and incoming web hooks - based on the decorators\n// For more information see: https://www.npmjs.com/package/express-msteams-host\nexpress.use(MsTeamsApiRouter(allComponents));\n\n// routing for pages for tabs and connector configuration\n// For more information see: https://www.npmjs.com/package/express-msteams-host\nexpress.use(MsTeamsPageRouter({\n    root: path.join(__dirname, \"web/\"),\n    components: allComponents\n}));\n\n// Set default web page\nexpress.use(\"/\", Express.static(path.join(__dirname, \"web/\"), {\n    index: \"index.html\"\n}));\n\n// Set the port\nexpress.set(\"port\", port);\n\n// Start the webserver\nhttp.createServer(express).listen(port, () => {\n    log(`Server running on ${port}`);\n});\n\n\n// register and load the bot\nconst botAdapter = new BotFrameworkAdapter({\n    appId: process.env.MICROSOFT_APP_ID,\n    appPassword: process.env.MICROSOFT_APP_PASSWORD\n});\n\n// configure what happens when there is an unhandled error by the bot\nbotAdapter.onTurnError = async (context, error) => {\n    console.error(`\\n [bot.onTurnError] unhandled error: ${error}`);\n    await context.sendTraceActivity(\"OnTurnError Trace\", `${error}`, \"https://www.botframework.com/schemas/error\", \"TurnError\");\n    await context.sendActivity(\"bot error\");\n};\n\n// run the bot when messages are received on the specified path\nconst bot = new FoodTruckBot();\nexpress.post(\"/api/messages\", (request, response) => {\n    botAdapter.processActivity(request, response, async (context) => {\n        await bot.run(context);\n    });\n});\n","module.exports = require(\"express\");","module.exports = require(\"http\");","module.exports = require(\"path\");","module.exports = require(\"morgan\");","module.exports = require(\"express-msteams-host\");","module.exports = require(\"debug\");","module.exports = require(\"compression\");","export default [\r\n  {\r\n    \"id\": 1,\r\n    \"name\": \"Pizza Buildana\",\r\n    \"likes\": 10,\r\n    \"savory\": true,\r\n    \"sweet\": false,\r\n    \"vegetarian\": true,\r\n    \"bookable\": true,\r\n    \"city\": \"Austin, TX\"\r\n  },\r\n  {\r\n    \"id\": 2,\r\n    \"name\": \"Grab and Dip\",\r\n    \"likes\": 5,\r\n    \"savory\": false,\r\n    \"sweet\": true,\r\n    \"vegetarian\": true,\r\n    \"bookable\": false,\r\n    \"city\": \"Denver, CO\"\r\n  },\r\n  {\r\n    \"id\": 3,\r\n    \"name\": \"Thai Cart\",\r\n    \"likes\": 17,\r\n    \"savory\": true,\r\n    \"sweet\": true,\r\n    \"vegetarian\": true,\r\n    \"bookable\": false,\r\n    \"city\": \"Austin, TX\"\r\n  },\r\n  {\r\n    \"id\": 4,\r\n    \"name\": \"Curry And Go\",\r\n    \"likes\": 54,\r\n    \"savory\": true,\r\n    \"sweet\": false,\r\n    \"vegetarian\": true,\r\n    \"bookable\": true,\r\n    \"city\": \"Portland, OR\"\r\n  },\r\n  {\r\n    \"id\": 5,\r\n    \"name\": \"The big fat pork\",\r\n    \"likes\": 9,\r\n    \"savory\": true,\r\n    \"sweet\": false,\r\n    \"vegetarian\": true,\r\n    \"bookable\": false,\r\n    \"city\": \"Seattle, WA\"\r\n  },\r\n  {\r\n    \"id\": 6,\r\n    \"name\": \"The French corner\",\r\n    \"likes\": 2,\r\n    \"savory\": true,\r\n    \"sweet\": true,\r\n    \"vegetarian\": true,\r\n    \"bookable\": true,\r\n    \"city\": \"Seattle, WA\"\r\n  },\r\n  {\r\n    \"id\": 7,\r\n    \"name\": \"Mexican Fiesta\",\r\n    \"likes\": 44,\r\n    \"savory\": true,\r\n    \"sweet\": false,\r\n    \"vegetarian\": false,\r\n    \"bookable\": false,\r\n    \"city\": \"Seattle\"\r\n  }\r\n]","module.exports = require(\"lodash\");","module.exports = require(\"dotenv\");","// Components will be added here\n\nexport const nonce = {}; // Do not remove!\n\nexport * from \"./foodTruckBot/foodTruckBot\";\n"],"sourceRoot":""}